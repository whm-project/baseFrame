//ztree设置
var setting = {
    view: {
        addHoverDom: addHoverDom,
        removeHoverDom: removeHoverDom,
        selectedMulti: false,
        fontCss: getFontCss,
        addDiyDom: addDiyDom
    },
    data: {
        key: {
            name:"orgNm",
            title:"orgCd"
        }
    },
    async: {
        enable: true,
        url: basePath + "/" + baseOrgCd + "/sysOrg/getChildOrg",
        autoParam:["orgCd=pcd"],
        dataFilter: ajaxDataFilter
    },
    callback: {
        onAsyncError: onAsyncError
    }
};

//初始化
var zTree;
$(function(){
    var treeObj = $("#org_ztree");
    $.fn.zTree.init(treeObj, setting);
    zTree = $.fn.zTree.getZTreeObj("org_ztree");
});

//设置节点样式
function setFontCss(nodeList, styleStr){
    //获取原来高亮的节点，使节点不再高亮
    var ylNodeList = zTree.getNodesByParam(styleStr, true, null);
    for( var i=0; i<ylNodeList.length; i++) {
        ylNodeList[i][styleStr] = false;
        zTree.updateNode(ylNodeList[i]);
    }

    //更新节点，使查询出来的节点高亮
    for( var i=0; i<nodeList.length; i++) {
        nodeList[i][styleStr] = true;
        zTree.updateNode(nodeList[i]);
    }
}

//设置节点样式
function getFontCss(treeId, treeNode) {
    var resultObj;
    if(treeNode.highlight){
        resultObj = {color:"#A60000", "font-weight":"bold"};
    }
    else if(treeNode.stopstop){
        resultObj = {color:"#988", "font-weight":"normal"};
    }else {
        resultObj = {color:"#333", "font-weight":"normal"};
    }
    return resultObj;
}

//在节点上固定显示自定义控件
function addDiyDom(treeId, treeNode) {
    var spaceWidth = 5;
    var switchObj = $("#" + treeNode.tId + "_switch"),
        icoObj = $("#" + treeNode.tId + "_ico");
    switchObj.remove();
    icoObj.before(switchObj);

    if (treeNode.level > 1) {
        var spaceStr = "<span style='display: inline-block;width:" + (spaceWidth * treeNode.level)+ "px'></span>";
        switchObj.before(spaceStr);
    }
}

//加载失败
function onAsyncError(event, treeId, treeNode, XMLHttpRequest, textStatus, errorThrown) {
    alert("加载失败，请重试！");
}

//更新节点，使查询出来的节点高亮
function searchNode() {
    var nodeList = zTree.getNodesByFilter(getNodeFilter);
    setFontCss(nodeList, "highlight");
}

//查找节点【根据name和code】
function getNodeFilter(node) {
    var search_name = $("#name").val();
    var search_code = $("#code").val();

    if(search_name.length > 0 && search_code.length > 0){
        return (node.orgNm.indexOf(search_name)>-1 && node.orgCd.indexOf(search_code)>-1);
    }else if(search_name.length > 0){
        return node.orgNm.indexOf(search_name)>-1;
    }else if(search_code.length > 0){
        return node.orgCd.indexOf(search_code)>-1;
    }else{
        alert("请输入要查询的条件！");
    }
}

//异步请求完，添加节点时，先进行过滤
function ajaxDataFilter(treeId, parentNode, childNodes){
    if (!childNodes) return null;
    for (var i=0; i<childNodes.length; i++) {
        //设置是否是父级节点
        if(childNodes[i].orgIsparent == "1"){
            childNodes[i].isParent = true;
        }else{
            childNodes[i].isParent = false;
        }

        //TODO 设置节点，停用状态字体为灰色，删除状态不显示，并设置每个节点的图片
        if(childNodes[i].orgStatus == 0){
            childNodes[i].stopstop = true;
        }
        if(childNodes[i].orgStatus == -1){
            childNodes.remove(i);
            i--;
        }
    }
    return childNodes;
}

//添加鼠标移动上去的样式
function addHoverDom(treeId, treeNode) {
    var sObj = $("#" + treeNode.tId + "_span");
    if (treeNode.editNameFlag || $("#addBtn_"+treeNode.tId).length>0) return;

    //新增
    var addStr = "<span class='button add' id='addBtn_" + treeNode.tId + "' title='add node' onfocus='this.blur();'></span>";
    var btn_add = $("#addBtn_"+treeNode.tId);
    if (btn_add) btn_add.bind("click", function(){
        alert("add");
        // addTreeNode(treeNode)
        return false;
    });

    //编辑
    var editStr = "<span class='button edit' id='editBtn_" + treeNode.tId + "' title='edit node' onfocus='this.blur();'></span>";
    var btn_edit = $("#editBtn_"+treeNode.tId);
    if(btn_edit) btn_edit.bind("click", function(){
        editTreeNode(treeNode)
    });

    //停用
    // var stopStr = "<span class='button icon-stop' id='stopBtn_" + treeNode.tId + "' title='stop node' onfocus='this.blur();'></span>";
    // var btn_stop = $("#stopBtn_"+treeNode.tId);
    // if(btn_stop) btn_stop.bind("click", function(){
    //     stopTreeNode(treeNode)
    // });

    //启用
    // var beginStr = "<span class='button icon-stop' id='beginBtn_" + treeNode.tId + "' title='begin node' onfocus='this.blur();'></span>";
    // var btn_begin = $("#beginBtn_"+treeNode.tId);
    // if(btn_begin) btn_begin.bind("click", function(){
    //     beginTreeNode(treeNode)
    // });

    //删除
    var removeStr = "<span class='button remove' id='removeBtn_" + treeNode.tId + "' title='remove node' onfocus='this.blur();'></span>";
    var btn_remove = $("#editBtn_"+treeNode.tId);
    if(btn_remove) btn_remove.bind("click", function(){
        removeTreeNode(treeNode)
    });

    //追加按钮
    if(treeNode.level == 0){
        sObj.after(addStr);
    }else{
        // if(treeNode.orgStatus == 1){
        //     sObj.after(removeStr).after(stopStr).after(editStr).after(addStr);
        // }else{
        //     sObj.after(removeStr).after(beginStr).after(editStr).after(addStr);
        // }
    }
};

//添加鼠标移出的样式
function removeHoverDom(treeId, treeNode) {
    alert("fdsfs");
    $("#addBtn_"+treeNode.tId).unbind().remove();
    $("#editBtn_"+treeNode.tId).unbind().remove();
    $("#beginBtn_"+treeNode.tId).unbind().remove();
    $("#stopBtn_"+treeNode.tId).unbind().remove();
    $("#removeBtn_"+treeNode.tId).unbind().remove();
};

//添加节点
function addTreeNode(parentNode){
    alert("1");
    //TODO 设置右边内容
    $("#orgId").val("");
    $("#orgNm").val("");
    $("#orgCd").val("");
    $("#orgType").find("option[value='1']").prop("selected",true);
    $("#engManCd").val(parentNode.orgCd);
}

//编辑节点
function editTreeNode(treeNode) {
    $("#orgId").val(treeNode.orgId);
    $("#orgNm").val(treeNode.orgNm);
    $("#orgCd").val(treeNode.orgCd);
    $("#orgType").find("option[value='"+treeNode.orgType+"']").prop("selected",true);
    $("#engManCd").val(treeNode.engManCd);
}

//启用
function beginTreeNode(treeNode){
    //如果是root节点，不能删除
    if(treeNode.orgCd == "root"){
        alert("根节点不能进行此操作！");
    }
    //不是root节点，提示判断是不是有子节点，如果有，confirm
    else if(treeNode.isParent){
        var msg = "是否启用该节点？子节点不会一同启用。";
        if(confirm(msg)){
            ajaxBegin(treeNode.orgCd);
        }
    }
    //不是根节点
    else{
        if(confirm("是否确定启用？")){
            //调用后台接口，设置为启用状态
            ajaxBegin(treeNode.orgCd);
        }
    }
}

//启用节点
function ajaxBegin(orgCd){
    $.ajax({
        type:"post",
        url: basePath + "/" + baseOrgCd + "/sysOrg/beginOrg",
        data:{orgCd: orgCd},
        success:function(checkResult){
            if(checkResult.state == 1){
                //使启用的节点不再是灰色
                var beginNodeList = zTree.getNodesByParam("orgCd", orgCd, null);
                for(var i=0; i<beginNodeList.length; i++){
                    beginNodeList[i].stopstop = false;
                    beginNodeList[i].orgStatus = 1;
                    zTree.updateNode(beginNodeList[i]);
                }
            }
            else{
                alert(checkResult.msg);
            }
        }
    })
}

//停用
function stopTreeNode(treeNode){
    //如果是root节点，不能删除
    if(treeNode.orgCd == "root"){
        alert("根节点不能进行此操作！");
        return ;
    }
    //如果当前节点已经是停用状态
    if(treeNode.orgStatus == 0){
        alert("当前节点已经是停用状态！");
        return;
    }
    //如果有有子节点
    if(treeNode.isParent){
        var msg = "要停用的节点是父节点，如果停用将连同子节点一起停用。\n\n请确认！";
        if(confirm(msg)){
            ajaxStopNode(treeNode.orgCd);
        }
    }
    //不是根节点
    else{
        if(confirm("是否确定停用？")){
            ajaxStopNode(treeNode.orgCd);
        }
    }
}

//ajax调用接口停用节点
function ajaxStopNode(orgCd){
    $.ajax({
        type:"post",
        url: basePath + "/" + baseOrgCd + "/sysOrg/stopOrg",
        data:{orgCd: orgCd},
        success:function(checkResult){
            if(checkResult.state == 1){
                //使停用的节点变灰
                var stopNodeList = zTree.getNodesByParamFuzzy("orgIndex", orgCd, null);
                for(var i=0; i<stopNodeList.length; i++){
                    stopNodeList[i].stopstop = true;
                    stopNodeList[i].orgStatus = 0;
                    zTree.updateNode(stopNodeList[i]);
                }
            }
            else{
                alert(checkResult.msg);
            }
        }
    })
}

//删除节点
function removeTreeNode(treeNode){
    //如果是root节点，不能删除
    if(treeNode.orgCd == "root"){
        alert("根节点不能进行此操作！");
    }
    //不是root节点，提示判断是不是有子节点，如果有，confirm
    else if(treeNode.isParent){
        var msg = "要删除的节点是父节点，如果删除将连同子节点一起删掉。\n\n请确认！";
        if(confirm(msg)){
            //TODO 调用后台接口，设置为删除状态
            zTree.removeNode(treeNode);
        }
    }
    //不是根节点
    else{
        if(confirm("是否确定删除？")){
            //TODO 调用后台接口，设置为删除状态，并动态删除节点
            zTree.removeNode(treeNode);
        }
    }

    //TODO 获得当前节点的父节点，并判断这个父节点下边是否还有子节点
}

//提交增改记录
function subInfo(){
    $.ajax({
        type:"post",
        url:basePath + "/" + baseOrgCd + "/sysOrg/saveOrg",
        data:$("#infoForm").serialize(),
        success:function(){
            alert("添加成功！");
            //TODO 动态添加节点
        }
    })
}